on:
  workflow_call:
    inputs:
      tag_name:
        description: "Provide all image name you wish to remove the deployment for"
        required: true
        type: string
    secrets:
      SSH_HOST:
        description: "Provide the FQDN or IP address of the server to deploy on"
        required: true
      SSH_USERNAME:
        description: "Provide the username to login with"
        required: true
      SSH_SECRET:
        description: "Provide the private SSH key to login with"
        required: true
      SSH_PORT:
        description: "Provide the SSH port"
        required: true

jobs:
  remove-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: Remove deployment from environment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_SECRET }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            STRIPPED_TAG_NAME=$(echo "${{ inputs.tag_name }}" | sed -e 's#/#\-#g' -e 's#\.#\-#g')

            rm -R /tmp/ugcompsoc_apid_prod || true
            cp -R /opt/ugcompsoc_apid/v[0-9]-[0-9]-[0-9] /tmp/ugcompsoc_apid_prod

            DOCKER_RESULTS=$(docker container ls -q --filter name=$STRIPPED_TAG_NAME)
            [ -z "$DOCKER_RESULTS" ] || docker rm $(docker container ls -q --filter name=$STRIPPED_TAG_NAME) --force

            rm -R /opt/ugcompsoc_apid/${STRIPPED_TAG_NAME} || true
            [[ ${STRIPPED_TAG_NAME} == "prerelease" ]] && rm -R /opt/ugcompsoc_apid/*${STRIPPED_TAG_NAME}* || true

            docker image prune -a -f
            docker network prune -f
