#!/usr/bin/env bash
#
# @author : Mak Sophea (Extended By Conor Mc Govern)
# @version : 1.0#
# Create a regex for a conventional commit.
commit_msg_type_regex='build|chore|ci|docs|feat|fix|perf|refactor|revert|style|test|wip'
commit_msg_scope_regex='[a-z \-]{1,25}'
commit_msg_subject_regex='.{1,75}'
convetional_commit_regex="^(${commit_msg_type_regex})(\(${commit_msg_scope_regex}\))?: (${commit_msg_subject_regex})\$"

# Get the commit message (the parameter we're given is just the path to the
# temporary file which holds the message).
commit_message=$(cat "$1")

# Check the message, if we match, all good baby.
if [[ "$commit_message" =~ $convetional_commit_regex ]]; then
   echo -e "\e[32mCommit message meets Conventional Commit standards...\e[0m"
   exit 0
fi

# Uh-oh, this is not a conventional commit, show an example and link to the spec.
echo -e "\e[31mThe commit message does not meet the Conventional Commit standard\e[0m"
echo "An example of a valid message is: "
echo "  feat(login): added 'login' route"
echo "More details at: https://www.conventionalcommits.org/en/v1.0.0/#summary"
echo "***********************************************************************"                                                                                                                                                        
echo "Here are the list of message type : ${commit_msg_type_regex}"                                                                                                                                                                           
echo "  <type>: <subject> max 50char ex :- fix: invalid request for login api"
echo "  <type(<scope>):> <subject> (Max 50 char) - <scope> is option ex: - fix(user): email address is empty on profile api"
echo "***********************************************************************"

exit 1
